daml 1.2 module Main.MyCar where

import Main.DealerShip

type MC = ContractId MyCar
type PnD = ContractId Pending

template MyCar
    with
        seller : Party
        agree: Text
        evaluator: Party
        bank: Party
    where

    signatory seller, evaluator, bank
    agreement agree

template Pending
    with
        agree: MyCar
        seller: Party
        evaluator: Party
        bank: Party
    where
        signatory seller, evaluator, bank

        controller agree.evaluator can
            Eva_Sign: PnD
                do 
                    create this with evaluator = agree.evaluator
        
        controller agree.bank can
            Bank_Sign: PnD
                do
                    create this with bank = agree.bank
        
        controller seller can
            Sell_my_Car: DS
                with dealer_ship: [Party]
                do
                assert (seller == agree.seller && evaluator == agree.evaluator && bank == agree.bank)
                create DealerShippa with seller; company = dealer_ship 



    -- controller seller can
    --   nonconsuming Sell_my_Car : DS
    --     with dealersh : [Party]
    --     do
    --         ds <- create DealerShippa with company = dealersh; seller

    --         return (ds)
          
    